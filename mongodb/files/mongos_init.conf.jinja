{# vim: set ft=sls : #}
{% import_yaml "mongodb/defaults.yaml" as raw_defaults -%}
{% set mdb = salt["grains.filter_by"](raw_defaults) -%}
{% set mongos = mdb.get("mongos", {}) -%}
{% do mongos.update(mongo_config) -%}
{% set limits = mongos.get("limits", {}) -%}
{% set cfg_settings = mongos.config_settings -%}

{# if the pillar does not have a processManagement.pidFilePath or systemLog.path configured: ceate it -#}
{% if cfg_settings.get("systemLog", {}) and cfg_settings.systemLog.get("path", '') -%}
{% do mongos.update({"logpath": cfg_settings.systemLog.path.rsplit("/", 1)[0]}) -%}
{% else -%}
{% do mongos.update({"logpath": "/var/log/mongodb" }) -%}
{% endif -%}

{% if cfg_settings.get("processManagement", {}) and cfg_settings.processManagement.get("pidFilePath", '') -%}
{% do mongos.update({"pidfile": cfg_settings.processManagement.pidFilePath}) -%}
{% else -%}
{% do mongos.update({"pidfile": ["/var/run", service_name + ".pid"] | join('/') }) -%}
{% endif -%}
# File is managed by salt. Do not edit!
# Ubuntu upstart file at /etc/init/mongos.conf

# Recommended ulimit values for mongos or mongos
# See http://docs.mongosb.org/manual/reference/ulimit/#recommended-settings
#
limit fsize unlimited unlimited
limit cpu unlimited unlimited
limit as unlimited unlimited
limit nofile 64000 64000
limit rss unlimited unlimited
limit nproc 64000 64000

kill timeout 300 # wait 300s between SIGTERM and SIGKILL.

pre-start script
  DAEMONUSER=${DAEMONUSER:-{{ mongos.service_user }}}
  if [ ! -d {{ mongos.logpath }} ]; then
    mkdir -p {{ mongos.logpath }} && chown {{ mongos.service_user }}:{{ mongos.service_group }} {{ mongos.logpath }}
  fi

  if [ ! -d {{ mongos.pidfile.rsplit('/', 1)[0] }} ]; then
    mkdir -p {{ mongos.pidfile.rsplit('/', 1)[0] }} && chown {{ mongos.service_user }}:{{ mongos.service_group }} {{ mongos.pidfile.rsplit('/', 1)[0] }}
  fi
  
  touch {{ mongos.pidfile }}
  chown $DAEMONUSER {{ mongos.pidfile }}
end script

start on runlevel [2345]
stop on runlevel [06]

script
  ENABLE_MONGOS="yes"
  CONF={{ mongos.config }}
  DAEMON={{ mongos.daemon }}
  DAEMONUSER=${DAEMONUSER:-{{ mongos.service_user }}}

  if [ -f /etc/default/mongos ]; then . /etc/default/mongos; fi

  # Handle NUMA access to CPUs (SERVER-3574)
  # This verifies the existence of numactl as well as testing that the command works
  NUMACTL_ARGS="--interleave=all"
  if which numactl >/dev/null 2>/dev/null && numactl $NUMACTL_ARGS ls / >/dev/null 2>/dev/null
  then
    NUMACTL="$(which numactl) -- $NUMACTL_ARGS"
    DAEMON_OPTS=${DAEMON_OPTS:-"--config $CONF"}
  else
    NUMACTL=""
    DAEMON_OPTS="-- "${DAEMON_OPTS:-"--config $CONF"}
  fi

  if [ "x$ENABLE_MONGOS" = "xyes" ]
  then
    exec start-stop-daemon --start \
        --name {{ service_name }} \
        --chuid $DAEMONUSER \
        --exec $NUMACTL $DAEMON $DAEMON_OPTS
  fi
end script
